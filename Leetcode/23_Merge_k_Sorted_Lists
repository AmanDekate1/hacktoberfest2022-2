/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    struct comp{
        bool operator()(ListNode* a, ListNode* b){
            return a->val > b->val;
        }
    };
    
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        priority_queue<ListNode*, vector<ListNode*>, comp> pq;
        for(auto it : lists){
            if(it!=NULL) pq.push(it);
        }
        ListNode* head=new ListNode();
        ListNode* curr=head;
        while(!pq.empty()){
            ListNode* temp=pq.top();
            pq.pop();
            curr->next=temp;
            curr=curr->next;
            if(temp->next!=NULL){
                pq.push(temp->next);
            }
        }
        return head->next;
    }
};
