
#include <iostream>

class Node
{
public:
	int data;
	Node *next;
	Node(int data)
	{
		this->data = data;
		this->next = NULL;
	}
};

using namespace std;

Node* mergeSortedLinkedLists(Node *head1, Node *head2)
{
   if(head1 == NULL){
       return head2;
   }
    if(head2 == NULL){
        return head1;
    }
    Node *finalH = NULL ,*finalT = NULL;
    while(head1 != NULL && head2 != NULL){
        if((head1->data) <= (head2->data)){
            if (finalH == NULL){
                 finalH = head1;
                 finalT = head1;
               head1 =  head1->next; 
            }
         //   cout << finalH << " " << finalT << endl;
        else{  
            finalT->next = head1;
            finalT = head1;
            head1 =  head1->next;
        }        
     }
        else{
          if (finalH == NULL){
            finalH = head2;
              finalT = head2;
                head2 =  head2->next;
          }
        //    cout << finalH << " " << finalT << endl;
      else{
            finalT->next = head2;
            finalT = head2;
            head2 =  head2->next;
      
      }
    }
    }
    if(head1 != NULL){
      finalT->next = head1;  
         finalT= head1;  
    }
    if(head2 != NULL){
      finalT->next = head2;  
          finalT = head2;  
    }
    return finalH;
}


Node *takeinput()
{
	int data;
	cin >> data;
	Node *head = NULL, *tail = NULL;
	while (data != -1)
	{
		Node *newNode = new Node(data);
		if (head == NULL)
		{
			head = newNode;
			tail = newNode;
		}
		else
		{
			tail->next = newNode;
			tail = newNode;
		}
		cin >> data;
	}
	return head;
}

void print(Node *head)
{
	Node *temp = head;
	while (temp != NULL)
	{
		cout << temp->data << " ";
		temp = temp->next;
	}
	cout << endl;
}

int main()
{
	int t;
	cin >> t;
	while (t--)
	{
		Node *head1 = takeinput();
		Node *head2 = takeinput();
		Node *head3 = mergeSortedLinkedLists(head1, head2);
		print(head3);
	}
	return 0;
}
