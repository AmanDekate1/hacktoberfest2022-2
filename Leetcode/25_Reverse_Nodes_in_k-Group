/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(k==1){
            return head;
        }
        int n=0;
        ListNode *fakehead=new ListNode();
        fakehead->next=head;
        ListNode *temp=head, *prevhead, *prev=NULL, *nxt;
        while(temp!=NULL){
            n++;
            temp=temp->next;
        }
        int m=n/k;
        temp=fakehead;
        while(m>0){
            for(int i=0;i<k;i++){
                if(i==0){
                    prevhead=head;
                }
                nxt=head->next;
                head->next=prev;
                prev=head;
                head=nxt;
                if(i==k-1){
                    temp->next=prev;
                    temp=prevhead;
                    prev=NULL;
                }
            }
            m--;
        }
        temp->next=head;
        return fakehead->next;
    }
};
